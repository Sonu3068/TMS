{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satra\\\\OneDrive\\\\Desktop\\\\Timetable\\\\src\\\\Admin\\\\Pollsresult.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Pollsresult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pollsresult({\n  pollId\n}) {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch poll results data from backend\n    async function fetchResults() {\n      try {\n        const res = await fetch(`/api/polls/${pollId}/results`);\n        const data = await res.json();\n        setOptions(data.options);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchResults();\n  }, [pollId]);\n  const totalVotes = options.reduce((sum, o) => sum + o.votes, 0);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading results...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"admin-title\",\n      children: \"Poll Results (Admin View)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), options.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this) : options.map(opt => {\n      const pct = totalVotes ? (opt.votes / totalVotes * 100).toFixed(1) : 0;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"opt-text\",\n            children: opt.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"opt-stats\",\n            children: [opt.votes, \" votes \\u2014 \", pct, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar\",\n            style: {\n              width: `${pct}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, opt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Pollsresult, \"/B0PH1Y5KZHzSGc6mmwGtSFKFmY=\");\n_c = Pollsresult;\n;\nvar _c;\n$RefreshReg$(_c, \"Pollsresult\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Pollsresult","pollId","_s","options","setOptions","loading","setLoading","fetchResults","res","fetch","data","json","err","console","error","totalVotes","reduce","sum","o","votes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","opt","pct","toFixed","text","style","width","id","_c","$RefreshReg$"],"sources":["C:/Users/satra/OneDrive/Desktop/Timetable/src/Admin/Pollsresult.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\r\n  import './Pollsresult.css';\r\n\r\nexport default function Pollsresult({ pollId }) {\r\n\r\n \r\n  const [options, setOptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch poll results data from backend\r\n    async function fetchResults() {\r\n      try {\r\n        const res = await fetch(`/api/polls/${pollId}/results`);\r\n        const data = await res.json();\r\n        setOptions(data.options);\r\n      } catch (err) {\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchResults();\r\n  }, [pollId]);\r\n\r\n  const totalVotes = options.reduce((sum, o) => sum + o.votes, 0);\r\n\r\n  if (loading) return <div className=\"loading\">Loading results...</div>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"admin-title\">Poll Results (Admin View)</h2>\r\n\r\n      {options.length === 0\r\n        ? <p>No results available.</p>\r\n        : options.map(opt => {\r\n            const pct = totalVotes ? ((opt.votes / totalVotes) * 100).toFixed(1) : 0;\r\n            return (\r\n              <div key={opt.id} className=\"admin-result\">\r\n                <div className=\"admin-header\">\r\n                  <span className=\"opt-text\">{opt.text}</span>\r\n                  <span className=\"opt-stats\">{opt.votes} votes â€” {pct}%</span>\r\n                </div>\r\n                <div className=\"bar-container\">\r\n                  <div className=\"bar\" style={{ width: `${pct}%` }}></div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}